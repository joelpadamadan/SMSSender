/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package smsender;

import au.com.bytecode.opencsv.CSVReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Joel
 */
public class CnGManagerDiag extends javax.swing.JDialog {

    String ProjectPath, contactfilepath, groupfilepath;
    DefaultListModel dlmContacts;
    DefaultListModel dlmGroups;
    String nextline[], headerrow[];

    public CnGManagerDiag(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ProjectPath = new File("").getAbsolutePath();
        contactfilepath = ProjectPath + "\\contact\\contact";
        groupfilepath = ProjectPath + "\\group";
        CreateDirectory();

        dlmContacts = new DefaultListModel();
        jLstAllContacts.setModel(dlmContacts);

        dlmGroups = new DefaultListModel();
        jLstGroup.setModel(dlmGroups);

        ArrayList list = new ArrayList();
        list = new Global().ReadFile(contactfilepath);
        Iterator itr = list.iterator();
        while (itr.hasNext()) {
            dlmContacts.addElement(itr.next());
        }

        File file = new File(groupfilepath);
        String grouplist[] = file.list();
        for (int i = 0; i < grouplist.length; i++) {
            dlmGroups.addElement(grouplist[i]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLstAllContacts = new javax.swing.JList();
        jBtnAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jBtnDelete = new javax.swing.JButton();
        jBtnExport = new javax.swing.JButton();
        jTxtFileChooser = new javax.swing.JTextField();
        jBtnBrowse = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLstGroup = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jBtnCreate = new javax.swing.JButton();
        jBtnDelete1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Contacts");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jScrollPane1.setViewportView(jLstAllContacts);

        jBtnAdd.setText("Add");
        jBtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddActionPerformed(evt);
            }
        });

        jLabel1.setText("Contacts");

        jBtnDelete.setText("Delete");
        jBtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDeleteActionPerformed(evt);
            }
        });

        jBtnExport.setText("Export");
        jBtnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExportActionPerformed(evt);
            }
        });

        jBtnBrowse.setText("...");
        jBtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBrowseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(jTxtFileChooser))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel1)
                    .addComponent(jBtnExport))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnBrowse)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBtnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnDelete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnExport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jScrollPane2.setViewportView(jLstGroup);

        jLabel2.setText("Group");

        jBtnCreate.setText("Create");
        jBtnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCreateActionPerformed(evt);
            }
        });

        jBtnDelete1.setText("Delete");
        jBtnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtnDelete1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtnCreate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnDelete1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddActionPerformed
        String Name = JOptionPane.showInputDialog(null, "Enter Name", "Contact Info", 2);
        if (Name != null) {
            String Number = JOptionPane.showInputDialog(null, "Enter Number", "Contact Info", 2);
            if (Number != null) {
                if (!new Global().check(contactfilepath, Name.toUpperCase().trim() + "   " + Number.trim())) {
                    new Global().AppendTofile(contactfilepath, Name.toUpperCase().trim() + "   " + Number.trim());
                }
                ArrayList list = new ArrayList();
                list = new Global().ReadFile(contactfilepath);
                Iterator itr = list.iterator();
                dlmContacts.clear();
                while (itr.hasNext()) {
                    dlmContacts.addElement(itr.next());
                }
            }
        }
    }//GEN-LAST:event_jBtnAddActionPerformed

    private void jBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDeleteActionPerformed
        if (jLstAllContacts.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(this, "No contacts selected for deletion", "No Selection", JOptionPane.INFORMATION_MESSAGE);
        } else {
            dlmContacts.removeElement(jLstAllContacts.getSelectedValue());
            Object obj[] = dlmContacts.toArray();
            new Global().rewriteContact(contactfilepath, obj);
        }
    }//GEN-LAST:event_jBtnDeleteActionPerformed

    private void jBtnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnExportActionPerformed
        try {
            Global global = new Global();
            CSVReader csvr = new CSVReader(new FileReader(jTxtFileChooser.getText()), ',');
            headerrow = csvr.readNext();
            if (null == headerrow) {
                throw new FileNotFoundException("No columns defined in given CSV file." + "Please check the CSV file format.");
            }
            while ((nextline = csvr.readNext()) != null) {
                if (nextline[0] != null && nextline[1] != null) {
                    System.out.println(nextline[0] + "    " + nextline[1]);
                    if (!global.check(contactfilepath, nextline[0].toUpperCase().trim() + "   " + nextline[1].trim())){
                        global.AppendTofile(contactfilepath, nextline[0].toUpperCase().trim() + "   " + nextline[1].trim());
                    }
                }
            }
            ArrayList list = new ArrayList();
            list = new Global().ReadFile(contactfilepath);
            Iterator itr = list.iterator();
            dlmContacts.clear();
            while (itr.hasNext()) {
                dlmContacts.addElement(itr.next());
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnExportActionPerformed

    private void jBtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBrowseActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File(ProjectPath));
        chooser.setDialogTitle("Open CSV FIle");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV", "csv");
        chooser.setFileFilter(filter);
        int counter = chooser.showDialog(this, "Open");
        if (counter == 0) {
            jTxtFileChooser.setText(chooser.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_jBtnBrowseActionPerformed

    private void jBtnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCreateActionPerformed
        String groupcsvfilepath = "";
        String filelist[];
        boolean check = false;
        String Groupname = JOptionPane.showInputDialog(null, "Enter the group name", "Group Name", 2);
        if (Groupname != null) {
            File file = new File(groupfilepath);
            filelist = file.list();
            for (int i = 0; i < filelist.length; i++) {
                if (Groupname.equals(filelist[i])) {
                    check = true;
                }                
            }
            if (check == true) {
                JOptionPane.showMessageDialog(this, "Please enter a different group name", "info", JOptionPane.WARNING_MESSAGE);
            } else {
                JFileChooser chooser = new JFileChooser();
                chooser.setCurrentDirectory(new File(ProjectPath));
                chooser.setDialogTitle("Select CSV File");
                FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV", "csv");
                chooser.setFileFilter(filter);
                int counter = chooser.showDialog(this, "Open");
                if (counter == 0) {
                    groupcsvfilepath = chooser.getSelectedFile().getPath();
                }

                try {
                    Global global = new Global();
                    CSVReader csvr = new CSVReader(new FileReader(groupcsvfilepath), ',');
                    headerrow = csvr.readNext();
                    if (headerrow == null) {
                        throw new FileNotFoundException("No columns defined in given CSV file." + "Please check the CSV file format.");
                    }
                    while ((nextline = csvr.readNext()) != null) {
                        if (nextline[0] != null && nextline[1] != null) {
                            System.out.println(nextline[0] + "    " + nextline[1]);
                            if (!global.check(contactfilepath, nextline[0].toUpperCase().trim() + "   " + nextline[1].trim())) {
                                global.AppendTofile(contactfilepath, nextline[0].toUpperCase().trim() + "   " + nextline[1].trim());
                            }
                            global.AppendTofile(groupfilepath + "\\" + Groupname, nextline[0].toUpperCase().trim() + "   " + nextline[1].trim());
                        }
                    }
                    ArrayList list = new ArrayList();
                    list = new Global().ReadFile(contactfilepath);
                    dlmContacts.clear();
                    Iterator itr = list.iterator();
                    while (itr.hasNext()) {
                        dlmContacts.addElement(itr.next());
                    }
                    dlmGroups.clear();
                    File groupfile = new File(groupfilepath);
                    String grouplist[] = groupfile.list();
                    for (int i = 0; i < grouplist.length; i++) {
                        dlmGroups.addElement(grouplist[i]);
                    }
                } catch (FileNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jBtnCreateActionPerformed

    private void jBtnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDelete1ActionPerformed
        if (jLstGroup.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(this, "No group selected for deletion", "No Selection", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                File file = new File(groupfilepath + "\\" + jLstGroup.getSelectedValue().toString());
                if (file.delete()) {
                    System.out.println(file.getName() + " is deleted!");
                } else {
                    System.out.println("Delete operation is failed.");
                }
                dlmGroups.clear();
                File groupfile = new File(groupfilepath);
                String grouplist[] = groupfile.list();
                for (int i = 0; i < grouplist.length; i++) {
                    dlmGroups.addElement(grouplist[i]);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBtnDelete1ActionPerformed

    private void CreateDirectory() {
        File contact = new File(ProjectPath + "\\contact");
        if (!contact.exists()) {
            contact.mkdir();
        }
        File group = new File(ProjectPath + "\\group");
        if (!group.exists()) {
            group.mkdir();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CnGManagerDiag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CnGManagerDiag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CnGManagerDiag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CnGManagerDiag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CnGManagerDiag dialog = new CnGManagerDiag(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);                                              
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAdd;
    private javax.swing.JButton jBtnBrowse;
    private javax.swing.JButton jBtnCreate;
    private javax.swing.JButton jBtnDelete;
    private javax.swing.JButton jBtnDelete1;
    private javax.swing.JButton jBtnExport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jLstAllContacts;
    private javax.swing.JList jLstGroup;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTxtFileChooser;
    // End of variables declaration//GEN-END:variables
}
